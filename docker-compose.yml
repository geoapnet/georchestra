version: "3.1"

volumes:
  postgresql_data:
  ldap_data:
  ldap_config:
  geoserver_geodata:
  geoserver_datadir:
  geoserver_tiles:
  geoserver_native_libs:
  geonetwork_datadir:
  datafeeder_uploads:
  datafeeder_postgis_data:

secrets:
  slapd_password:
    file: ./secrets/slapd_password.txt
  geoserver_privileged_user_passwd:
    file: ./secrets/geoserver_privileged_user_passwd.txt

services:
  database:
    image: georchestra/database:22.0.x
    environment:
      - POSTGRES_USER=georchestra
      - POSTGRES_PASSWORD=georchestra
    volumes:
      - postgresql_data:/var/lib/postgresql/data
    restart: always

  ldap:
    image: georchestra/ldap:22.0.x
    secrets:
      - slapd_password
      - geoserver_privileged_user_passwd
    environment:
        - SLAPD_ORGANISATION=georchestra
        - SLAPD_DOMAIN=georchestra.org
        - SLAPD_PASSWORD_FILE=/run/secrets/slapd_password
        - SLAPD_PASSWORD=
        - GEOSERVER_PRIVILEGED_USER_PASSWORD_FILE=/run/secrets/geoserver_privileged_user_passwd
        - SLAPD_LOG_LEVEL=32768 # See https://www.openldap.org/doc/admin24/slapdconfig.html#loglevel%20%3Clevel%3E
    volumes:
      - ldap_data:/var/lib/ldap
      - ldap_config:/etc/ldap
    restart: always

  proxy:
    image: georchestra/security-proxy:22.0.x
    depends_on:
      - ldap
      - database
    volumes:
      - ./config:/etc/georchestra
    environment:
      - JAVA_OPTIONS=-Dorg.eclipse.jetty.annotations.AnnotationParser.LEVEL=OFF
      - XMS=256M
      - XMX=1G
    restart: always

  cas:
    image: georchestra/cas:22.0.0-georchestra
    depends_on:
      - ldap
    volumes:
      - ./config:/etc/georchestra
    environment:
      - JAVA_OPTIONS=-Dorg.eclipse.jetty.annotations.AnnotationParser.LEVEL=OFF
      - XMS=256M
      - XMX=1G
    restart: always

  header:
    image: georchestra/header:22.0.x
    volumes:
      - ./config:/etc/georchestra
    environment:
      - JAVA_OPTIONS=-Dorg.eclipse.jetty.annotations.AnnotationParser.LEVEL=OFF
      - XMS=256M
      - XMX=512M
    restart: always

  geoserver:
    image: georchestra/geoserver:22.0.x
    depends_on:
      - ldap
    volumes:
      - ./config:/etc/georchestra
      - geoserver_datadir:/mnt/geoserver_datadir
      - geoserver_geodata:/mnt/geoserver_geodata
      - geoserver_tiles:/mnt/geoserver_tiles
      - geoserver_native_libs:/mnt/geoserver_native_libs
    environment:
      - JAVA_OPTIONS=-Dorg.eclipse.jetty.annotations.AnnotationParser.LEVEL=OFF
      - XMS=256M
      - XMX=8G
    restart: always

  console:
    image: georchestra/console:22.0.x
    depends_on:
      - ldap
      - database
    volumes:
      - ./config:/etc/georchestra
    environment:
      - JAVA_OPTIONS=-Dorg.eclipse.jetty.annotations.AnnotationParser.LEVEL=OFF
      - XMS=256M
      - XMX=1G
    restart: always

  geonetwork:
    image: georchestra/geonetwork:22.0.x
    depends_on:
      - console
      - database
      - kibana
      - elasticsearch
    volumes:
      - ./config:/etc/georchestra
      - geonetwork_datadir:/mnt/geonetwork_datadir
    environment:
      - DATA_DIR=/var/lib/geonetwork_data
      - ES_HOST=elasticsearch
      - ES_PROTOCOL=http
      - ES_PORT=9200
      - KB_URL=http://kibana:5601
      - JAVA_OPTIONS=-Duser.home=/tmp/jetty -Dgeorchestra.datadir=/etc/georchestra -Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5005 -Dorg.eclipse.jetty.annotations.AnnotationParser.LEVEL=OFF
      - XMS=256M
      - XMX=6G
    restart: always

  analytics:
    image: georchestra/analytics:22.0.x
    depends_on:
      - database
    volumes:
      - ./config:/etc/georchestra
    environment:
      - JAVA_OPTIONS=-Dorg.eclipse.jetty.annotations.AnnotationParser.LEVEL=OFF
      - XMS=256M
      - XMX=1G
    restart: always

  mapstore:
    image: georchestra/mapstore:22.0.0-georchestra
    depends_on:
      - database
    volumes:
      - ./config:/etc/georchestra
    environment:
      - JAVA_OPTS=-Xms512m -Xmx512m -XX:MaxPermSize=128m -Dgeorchestra.datadir=/etc/georchestra -DPRINT_BASE_URL=pdf

  postgis:
    # used by datafeeder to ingest uploaded user datasets into
    image: postgis/postgis:13-3.1-alpine
    environment:
      - POSTGRES_DB=datafeeder
      - POSTGRES_USER=georchestra
      - POSTGRES_PASSWORD=georchestra
    volumes:
      - datafeeder_postgis_data:/var/lib/postgresql/data
    restart: always

  datafeeder:
    image: georchestra/datafeeder:22.0.x
    volumes:
      - ./config:/etc/georchestra
      - datafeeder_uploads:/tmp/datafeeder
    environment:
      - JAVA_OPTS=-Xms512m -Xmx512m -XX:MaxPermSize=128m

  import:
    image: georchestra/datafeeder-frontend:22.0.x
    volumes:
      - ./config:/etc/georchestra

  elasticsearch:
    image: elasticsearch:7.9.0
    environment:
      discovery.type: single-node

  kibana:
    image: kibana:7.9.0
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    volumes:
      - ./kibana/kibana.yml:/usr/share/kibana/config/kibana.yml

